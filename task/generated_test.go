// Code generated by go generate; DO NOT EDIT.
package task

import (
	"errors"
	"testing"

	"github.com/Xuanwo/navvy"
	"github.com/stretchr/testify/assert"

	"github.com/yunify/qsctl/v2/pkg/fault"
	"github.com/yunify/qsctl/v2/pkg/types"
)

var _ navvy.Pool
var _ types.Pool

func TestBetweenStorageCheckTask_TriggerFault(t *testing.T) {
	task := &BetweenStorageCheckTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyDirTask_TriggerFault(t *testing.T) {
	task := &CopyDirTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyFileTask_TriggerFault(t *testing.T) {
	task := &CopyFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyLargeFileTask_TriggerFault(t *testing.T) {
	task := &CopyLargeFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyPartialFileTask_TriggerFault(t *testing.T) {
	task := &CopyPartialFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyPartialStreamTask_TriggerFault(t *testing.T) {
	task := &CopyPartialStreamTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopySingleFileTask_TriggerFault(t *testing.T) {
	task := &CopySingleFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopySmallFileTask_TriggerFault(t *testing.T) {
	task := &CopySmallFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCopyStreamTask_TriggerFault(t *testing.T) {
	task := &CopyStreamTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestCreateStorageTask_TriggerFault(t *testing.T) {
	task := &CreateStorageTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestDeleteDirTask_TriggerFault(t *testing.T) {
	task := &DeleteDirTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestDeleteFileTask_TriggerFault(t *testing.T) {
	task := &DeleteFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestDeleteSegmentTask_TriggerFault(t *testing.T) {
	task := &DeleteSegmentTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestDeleteStorageTask_TriggerFault(t *testing.T) {
	task := &DeleteStorageTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestIsDestinationObjectExistTask_TriggerFault(t *testing.T) {
	task := &IsDestinationObjectExistTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestIsSizeEqualTask_TriggerFault(t *testing.T) {
	task := &IsSizeEqualTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestIsUpdateAtGreaterTask_TriggerFault(t *testing.T) {
	task := &IsUpdateAtGreaterTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestListDirTask_TriggerFault(t *testing.T) {
	task := &ListDirTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestListSegmentTask_TriggerFault(t *testing.T) {
	task := &ListSegmentTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestListStorageTask_TriggerFault(t *testing.T) {
	task := &ListStorageTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestMD5SumFileTask_TriggerFault(t *testing.T) {
	task := &MD5SumFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestMD5SumStreamTask_TriggerFault(t *testing.T) {
	task := &MD5SumStreamTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestMoveDirTask_TriggerFault(t *testing.T) {
	task := &MoveDirTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestMoveFileTask_TriggerFault(t *testing.T) {
	task := &MoveFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestReachFileTask_TriggerFault(t *testing.T) {
	task := &ReachFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestSegmentCompleteTask_TriggerFault(t *testing.T) {
	task := &SegmentCompleteTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestSegmentFileCopyTask_TriggerFault(t *testing.T) {
	task := &SegmentFileCopyTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestSegmentInitTask_TriggerFault(t *testing.T) {
	task := &SegmentInitTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestSegmentStreamCopyTask_TriggerFault(t *testing.T) {
	task := &SegmentStreamCopyTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestStatFileTask_TriggerFault(t *testing.T) {
	task := &StatFileTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}

func TestSyncTask_TriggerFault(t *testing.T) {
	task := &SyncTask{}
	task.SetFault(fault.New())
	err := errors.New("test error")
	task.TriggerFault(err)
	assert.True(t, task.GetFault().HasError())
}
