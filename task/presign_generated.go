// Code generated by go generate; DO NOT EDIT.
package task

import (
	"fmt"

	"github.com/Xuanwo/navvy"
	"github.com/google/uuid"

	"github.com/yunify/qsctl/v2/pkg/types"
)

var _ navvy.Pool
var _ types.Pool
var _ = uuid.New()

// presignTaskRequirement is the requirement for execute PresignTask.
type presignTaskRequirement interface {
	navvy.Task

	// Inherited value

	// Mutable value
}

// mockPresignTask is the mock task for PresignTask.
type mockPresignTask struct {
	types.Pool
	types.Fault
	types.ID

	// Inherited value

	// Mutable value
}

func (t *mockPresignTask) Run() {
	panic("mockPresignTask should not be run.")
}

// PresignTask will will handle presign tasks.
type PresignTask struct {
	presignTaskRequirement

	// Predefined runtime value
	types.Fault
	types.ID
	types.Scheduler

	// Runtime value
	types.BucketName
	types.DestinationPath
	types.DestinationStorage
	types.DestinationType
	types.Expire
	types.Pool
	types.URL
}

// Run implement navvy.Task
func (t *PresignTask) Run() {
	t.run()
}

func (t *PresignTask) TriggerFault(err error) {
	t.SetFault(fmt.Errorf("Task Presign failed: {%w}", err))
}

// NewPresignTask will create a PresignTask and fetch inherited data from Task.
func NewPresignTask(task navvy.Task) navvy.Task {
	t := &PresignTask{
		presignTaskRequirement: task.(presignTaskRequirement),
	}
	t.SetID(uuid.New().String())
	t.new()
	return t
}
