// Code generated by go generate; DO NOT EDIT.
package common

import (
	"github.com/Xuanwo/navvy"

	"github.com/yunify/qsctl/v2/task/types"
	"github.com/yunify/qsctl/v2/task/utils"
)

var _ navvy.Pool
var _ types.Pool
var _ = utils.SubmitNextTask

// FileMD5SumTaskRequirement is the requirement for execute FileMD5SumTask.
type FileMD5SumTaskRequirement interface {
	navvy.Task
	types.Todoist
	types.PoolGetter
	types.MD5SumSetter
	types.PathGetter
	types.OffsetGetter
	types.SizeGetter
}

// FileMD5SumTask will get file's md5 sum.
type FileMD5SumTask struct {
	FileMD5SumTaskRequirement
}

// NewFileMD5SumTask will create a new FileMD5SumTask.
func NewFileMD5SumTask(task types.Todoist) navvy.Task {
	o, ok := task.(FileMD5SumTaskRequirement)
	if !ok {
		panic("task is not fill FileMD5SumRequirement")
	}

	return &FileMD5SumTask{o}
}

// StreamMD5SumTaskRequirement is the requirement for execute StreamMD5SumTask.
type StreamMD5SumTaskRequirement interface {
	navvy.Task
	types.Todoist
	types.PoolGetter
	types.MD5SumSetter
	types.PathGetter
	types.ContentGetter
}

// StreamMD5SumTask will get stream's md5 sum.
type StreamMD5SumTask struct {
	StreamMD5SumTaskRequirement
}

// NewStreamMD5SumTask will create a new StreamMD5SumTask.
func NewStreamMD5SumTask(task types.Todoist) navvy.Task {
	o, ok := task.(StreamMD5SumTaskRequirement)
	if !ok {
		panic("task is not fill StreamMD5SumRequirement")
	}

	return &StreamMD5SumTask{o}
}
