// Code generated by go generate; DO NOT EDIT.
package common

import (
	"fmt"

	"github.com/Xuanwo/navvy"
	"github.com/google/uuid"

	"github.com/yunify/qsctl/v2/pkg/types"
	"github.com/yunify/qsctl/v2/utils"
)

var _ navvy.Pool
var _ types.Pool
var _ = utils.SubmitNextTask
var _ = uuid.New()

// objectListTaskRequirement is the requirement for execute ObjectListTask.
type objectListTaskRequirement interface {
	navvy.Task
	types.Todoist
	types.PoolGetter
	types.FaultSetter
	types.FaultValidator
	types.IDGetter

	// Inherited value
	types.DestinationPathGetter
	types.DestinationStorageGetter
	types.ObjectChannelGetter
	types.RecursiveGetter
	// Runtime value
}

// mockObjectListTask is the mock task for ObjectListTask.
type mockObjectListTask struct {
	types.Todo
	types.Pool
	types.Fault
	types.ID

	// Inherited value
	types.DestinationPath
	types.DestinationStorage
	types.ObjectChannel
	types.Recursive
	// Runtime value
}

func (t *mockObjectListTask) Run() {
	panic("mockObjectListTask should not be run.")
}

// ObjectListTask will list objects.
type ObjectListTask struct {
	objectListTaskRequirement
}

// Run implement navvy.Task.
func (t *ObjectListTask) Run() {
	t.run()
	if t.ValidateFault() {
		return
	}
	utils.SubmitNextTask(t.objectListTaskRequirement)
}

func (t *ObjectListTask) TriggerFault(err error) {
	t.SetFault(fmt.Errorf("Task ObjectList failed: {%w}", err))
}

// NewObjectListTask will create a new ObjectListTask.
func NewObjectListTask(task types.Todoist) navvy.Task {
	return &ObjectListTask{task.(objectListTaskRequirement)}
}
