// Code generated by go generate; DO NOT EDIT.
package common

import (
	"github.com/Xuanwo/navvy"

	"github.com/yunify/qsctl/v2/task/types"
	"github.com/yunify/qsctl/v2/task/utils"
)

var _ navvy.Pool
var _ types.Pool
var _ = utils.SubmitNextTask

// FileUploadTaskRequirement is the requirement for execute FileUploadTask.
type FileUploadTaskRequirement interface {
	navvy.Task
	types.Todoist
	types.PoolGetter
	types.KeyGetter
	types.PathGetter
	types.MD5SumGetter
	types.StorageGetter
}

// FileUploadTask will upload file as an object.
type FileUploadTask struct {
	FileUploadTaskRequirement
}

// NewFileUploadTask will create a new FileUploadTask.
func NewFileUploadTask(task types.Todoist) navvy.Task {
	o, ok := task.(FileUploadTaskRequirement)
	if !ok {
		panic("task is not fill FileUploadRequirement")
	}

	return &FileUploadTask{o}
}
