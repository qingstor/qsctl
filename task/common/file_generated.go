// Code generated by go generate; DO NOT EDIT.
package common

import (
	"github.com/Xuanwo/navvy"

	"github.com/yunify/qsctl/v2/pkg/types"
	"github.com/yunify/qsctl/v2/utils"
)

var _ navvy.Pool
var _ types.Pool
var _ = utils.SubmitNextTask

// fileUploadTaskRequirement is the requirement for execute FileUploadTask.
type fileUploadTaskRequirement interface {
	navvy.Task
	types.Todoist
	types.PoolGetter

	// Inherited value
	types.KeyGetter
	types.MD5SumGetter
	types.PathGetter
	types.StorageGetter
	// Runtime value
}

// mockFileUploadTask is the mock task for FileUploadTask.
type mockFileUploadTask struct {
	types.Todo
	types.Pool

	// Inherited value
	types.Key
	types.MD5Sum
	types.Path
	types.Storage
	// Runtime value
}

func (t *mockFileUploadTask) Run() {
	panic("mockFileUploadTask should not be run.")
}

// FileUploadTask will upload file as an object.
type FileUploadTask struct {
	fileUploadTaskRequirement
}

// Run implement navvy.Task.
func (t *FileUploadTask) Run() {
	t.run()
	utils.SubmitNextTask(t.fileUploadTaskRequirement)
}

// NewFileUploadTask will create a new FileUploadTask.
func NewFileUploadTask(task types.Todoist) navvy.Task {
	return &FileUploadTask{task.(fileUploadTaskRequirement)}
}
