// Code generated by go generate; DO NOT EDIT.
package common

import (
	"fmt"

	"github.com/Xuanwo/navvy"
	"github.com/google/uuid"

	"github.com/yunify/qsctl/v2/pkg/types"
)

var _ navvy.Pool
var _ types.Pool
var _ = uuid.New()

// objectStatTaskRequirement is the requirement for execute ObjectStatTask.
type objectStatTaskRequirement interface {
	navvy.Task

	// Inherited value
	types.DestinationPathGetter
	types.DestinationStorageGetter

	// Mutable value
}

// mockObjectStatTask is the mock task for ObjectStatTask.
type mockObjectStatTask struct {
	types.Todo
	types.Pool
	types.Fault
	types.ID

	// Inherited value
	types.DestinationPath
	types.DestinationStorage

	// Mutable value
}

func (t *mockObjectStatTask) Run() {
	panic("mockObjectStatTask should not be run.")
}

// ObjectStatTask will stat a remote object by request headObject.
type ObjectStatTask struct {
	objectStatTaskRequirement

	// Predefined runtime value
	types.Fault
	types.ID
	types.Scheduler

	// Runtime value
	types.Object
}

// Run implement navvy.Task
func (t *ObjectStatTask) Run() {
	t.run()
}

func (t *ObjectStatTask) TriggerFault(err error) {
	t.SetFault(fmt.Errorf("Task ObjectStat failed: {%w}", err))
}

// Wait will wait until ObjectStatTask has been finished
func (t *ObjectStatTask) Wait() {
	t.GetPool().Wait()
}
