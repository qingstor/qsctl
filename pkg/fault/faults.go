// Code generated by go generate; DO NOT EDIT.
package fault

import (
	"fmt"

	"github.com/yunify/qsctl/v2/pkg/types"
)

type StorageObjectNoPermission struct {
	err error
	types.Key
}

func (f *StorageObjectNoPermission) Error() string {
	return fmt.Sprintf(`Storage Object [%s] do not have enough permission: {%w}`, f.GetKey(), f.err)
}

func NewStorageObjectNoPermission(err error, key string) error {
	f := &StorageObjectNoPermission{err: err}
	f.SetKey(key)

	return f
}

type StorageObjectNotFound struct {
	err error
	types.Key
}

func (f *StorageObjectNotFound) Error() string {
	return fmt.Sprintf(`Storage Object [%s] is not found: {%w}`, f.GetKey(), f.err)
}

func NewStorageObjectNotFound(err error, key string) error {
	f := &StorageObjectNotFound{err: err}
	f.SetKey(key)

	return f
}

type Unhandled struct {
	err error
}

func (f *Unhandled) Error() string {
	return fmt.Sprintf(`Operation failed via unhandled error: %w`, f.err)
}

func NewUnhandled(err error) error {
	f := &Unhandled{err: err}

	return f
}
